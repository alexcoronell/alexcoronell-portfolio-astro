---
/* Utils */
import { getLangFromUrl } from "../../i18n/utils";
import { translateStatusWork } from "../../i18n/translate";

/* Data */
import { type Work, type Status } from "../../core/types/PersonalData";

/* Props */
interface Props {
  item: Work;
}
const { item } = Astro.props;
let technologiesTitle = "Technologies";
let status: Status | string = item.status;
let visitTextButton = "Visit";
let visitTheCodeTextButton = "Visit the code";
const lang = getLangFromUrl(Astro.url);
if (lang === "es") {
  technologiesTitle = "Tecnologías";
  status = translateStatusWork(item.status, lang);
  visitTextButton = "Visita";
  visitTheCodeTextButton = "Visita el código";
}

const pathImages = "/assets/images/briefcase/";
const hrefActive = item.url.length > 0;
---

<div class="WorkItem">
  <a href="#">
    <img
      class="rounded-t-lg"
      src={pathImages + item.image}
      alt={item.title + " image"}
    />
  </a>
  <div class="WorkItem__detail">
    <h5 class="WorkItem__title">
      {item.title}
    </h5>
    <p class="WorkItem__status">Status: {status}</p>
    <p class="WorkItem__technologiesTitle">{technologiesTitle}:</p>
    <div class="WorkItem__technologiesItems">
      {
        item.technologies.map((tech) => {
          return (
            <span class="mr-2 mb-3 border border-primary rounded-full grow-0 text-primary px-2 text-[0.8rem]">
              {tech}
            </span>
          );
        })
      }
    </div>
  </div>
  <div class="w-full flex items-center justify-center gap-x-3">
    {
      hrefActive && (
        <a
          href={item.url}
          target="_blank"
          class="btn-primary inline-flex items-center justify-center text-center w-[130px]"
        >
          {visitTextButton}
        </a>
      )
    }

    {
      !hrefActive && (
      <a
          tabindex="-1"
          class="btn-primary btn-primary--disabled inline-flex items-center justify-center text-center w-[130px]"
        >
          {visitTextButton}
        </a>
      )
    }

    {
      item.publicCode && (
        <a
          href={item.codeUrl}
          target="_blank"
          class="btn-primary inline-flex items-center justify-center text-center px-4 w-[130px"
        >
          {visitTheCodeTextButton}
        </a>
      )
    }
  </div>
</div>

<style>
  .WorkItem {
    @apply max-w-sm border border-primary/30 rounded-lg shadow p-0 pb-5 mb-5 md:m-0 mx-auto flex flex-col justify-between overflow-hidden;

    &__detail {
      @apply p-5 grow flex flex-col;
    }

    &__title {
      @apply mb-0 text-lg font-bold tracking-tight;
    }

    &__status {
      @apply mb-3 mt-0;
      font-style: italic;
    }

    &__technologiesItems {
      @apply text-wrap w-full overflow-hidden flex flex-wrap;
    }
  }
</style>
